name: develop pre-merge check

on: 
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

env:
  CMAKE_VERSION: 3.15.5

jobs:
  cmake-win-test:
    name: cmake build-win
    runs-on: windows-latest
    strategy:
      matrix:
        generator: [vs2019, mingw]
        shared: [shared, static]

    steps:
    - uses: actions/checkout@v1
    - name: cmake_version
      run: cmake --version
    - name: cmake_generage-vs2019
      if: matrix.generator == 'vs2019'
      run: cmake -S . -B build -G "Visual Studio 16 2019"
    - name: cmake_generage-mingw
      if: matrix.generator == 'mingw'
      run: cmake -S . -B build -G "MSYS Makefiles"
    - name: cmake_configure-shared
      if: matrix.shared == 'shared'
      run: cmake -DENABLE_SHARED=on --build build
    - name: cmake_configure-static
      if: matrix.shared != 'shared'
      run: cmake -DENABLE_SHARED=off --build build
    - name: cmake_build
      run: cmake --build build --config Release --parallel 2
    - name: ctest
      run: |
        cd build
        ctest -C Release --output-on-failure

  cmake-mac-test:
    name: cmake build-mac
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: cmake_version
      run: cmake --version
    - name: cmake_generage-macos
      run: cmake -S . -B build -G "Unix Makefiles"
    - name: cmake_configure-enable
      run: cmake -DENABLE_SHARED=on -DENABLE_ELEMENTS=on --build build
    - name: cmake_build
      run: cmake --build build --config Release
    - name: ctest
      run: |
        cd build
        ctest -C Release --output-on-failure
    - name: lint_check
      run: ./tools/lint_quiet.sh

  cmake-ubuntu-test:
    name: cmake build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elements: [elements-on, elements-off]

    steps:
    - uses: actions/checkout@v1
    - name: cmake-useCache-ubuntu
      uses: actions/cache@v1
      id: cache
      with:
        path: cache/cmake
        key: ${{ runner.os }}-cmake-3.15.5-x64
    - name: cmake-download-ubuntu
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p cache/cmake
        cd cache/cmake
        wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
        cd ../..
    - name: cmake-setting-ubuntu
      run: |
        export cmake_file_name="cmake-$CMAKE_VERSION-Linux-x86_64"
        cd cache/cmake
        tar zxvf $cmake_file_name.tar.gz
        chmod +x $cmake_file_name/bin/cmake $cmake_file_name/bin/ctest
        export CURRENT_DIR=$(pwd)
        echo ::add-path::$CURRENT_DIR/$cmake_file_name/bin
        cd ../..
    - name: cmake_configure-enable-elements
      if: matrix.elements == 'elements-on'
      run: |
        cmake -S . -B build -G "Unix Makefiles"
        cmake -DENABLE_SHARED=on -DENABLE_ELEMENTS=on -DTARGET_RPATH=./build/Release --build build
    - name: cmake_configure-disable-elements
      if: matrix.elements == 'elements-off'
      run: |
        cmake -S . -B build -G "Unix Makefiles"
        cmake -DENABLE_SHARED=on -DENABLE_ELEMENTS=off -DTARGET_RPATH=./build/Release --build build
    - name: cmake-build
      run: cmake --build build --config Release --parallel 2
    - name: test
      run: |
        cd build
        ctest -C Release --output-on-failure
        cd ..
    - name: ubuntu-after
      run: rm -rf cache/cmake/cmake-$CMAKE_VERSION-Linux-x86_64

  doxygen-ubuntu:
    name: doxygen-ubuntu
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: install_doxygen
      run: sudo apt install doxygen graphviz
    - name: doxygen_check
      run: |
        cd doc
        doxygen Doxyfile_quiet_all
